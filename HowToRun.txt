Ensure that you have the following installed:
Install Python 3.8.2
Install postgreSQL & pgAdmin

Go to Command Prompt/Shell:pip
pip install pipenv //Need a pipenv to generate piplock file (if not generated)
pipenv shell //Start pipenv (virtual env) for python so that the modules are not installed globally
pipenv install apscheduler (or pip install apscheduler)
pipenv install flask
pipenv install psycopg2
pipenv install psycopg2-binary
pipenv install flask-sqlalchemy
pipenv install gunicorn (Not sure if needed yet) //for Heroku/Server, but not required unless we want to store the database somewhere
pipenv install flask-login

In foodsanta, there is a settings.py file. Edit this file to your settings (since we using diff password)

To setup database, you need to create database called foodsanta and connect to it via psql

--FOR TESTING--
To test if the database ispipenv install  working, run \i testsetup.sql in psql and start the web application with python app.py in Terminal/Command Prompt

So there's a form to put member name and rice purity score. If you add in a member that is already existing (case-sensitive), it will refresh the page 

If you add in a member that's not within the Test table, it will render a success page. You can view if the member/score has been added by refreshing pgAdmin and checking.

Do note that you need to refresh the browser and not the table.

--FOR SETUP OF FOODSANTA--
Run \i init.sql and \i db2.sql in psql

If successful, you should see the tables being created under the database.

In order to start the web application, run python app.py in Terminal/Command Prompt

--TO CHECK--

Ensure your pip file looks like this: (pylint is optional, only if you are using VSC)
"""
[[source]]
name = "pypi"
url = "https://pypi.org/simple"
verify_ssl = true

[dev-packages]
pylint = "*"

[packages]
flask = "*"
psycopg2 = "*"
psycopg2-binary = "*"
flask-sqlalchemy = "*"

[requires]
python_version = "3.8"
"""

--FOR TESTING PURPOSES--

This particular section pertains to the testing of a rider allocation to a newly made order.
According to project requirements, the rider assignment to an order is by the FDS. For FoodSanta,
we prioritize an allocation of a rider to an order based on his availability in that particular 
time of the day and that he is not currently busy with another order. This means that there may
be several riders available, in which case we will randomise the rider that is allocated. If there
are no riders available, the rider that is currently on shift and is the earliest to have left to 
pick up his order at the restaurant will be allocated to the order.

Since the rider allocated in this first scenario will be randomised, we have included the print
statement in the console to determine which rider the order has been allocated to. To test that 
this rider has indeed received an allocation, enter the application under this rider's account.
The page should be directed to informing the rider that an allocation has been made. Otherwise,
FoodSanta will inform him that there are no orders allocated to him now. 

Images/Templates derived from, all rights go to the following webpages and their respective owners:

https://cdn.hipwallpaper.com/i/78/82/FYATtm.jpg (Login background page)
https://www.jing.fm/iclip/u2q8y3q8u2i1u2q8_santa-claus-food-christmas-dinner-chef-santa-claus/ (foodsanta logo)
https://colorlib.com/wp/free-bootstrap-registration-forms/ (signup form page)